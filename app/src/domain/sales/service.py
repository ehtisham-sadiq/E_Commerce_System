from .models import Sale
from app.src.domain.sales.schemas import SaleCreate
from sqlalchemy.ext.asyncio import AsyncSession
from sqlalchemy.future import select
from typing import Union

class SaleService:
    def __init__(self, db: AsyncSession):
        self.db = db

    async def create_sale(self, sale_data: SaleCreate) -> Sale:
        # Create an instance of Sale using the provided sale_data
        sale_instance = Sale(**sale_data.dict())
        
        # Add the instance to the session
        self.db.add(sale_instance)
        await self.db.commit()
        
        # Refresh to get the new data from DB (e.g., autogenerated ID)
        await self.db.refresh(sale_instance)
        
        return sale_instance

    async def get_sale(self) -> list[Sale]:
        result = await self.db.execute(select(Sale))
        return result.scalars().all()

    async def get_sale_by_id(self, sale_id: int) -> Union[Sale,None]:
        return await self.db.get(Sale, sale_id)
